## PROBLEM STATEMENT 

Given a string s, return the number of palindromic substrings in it.

A string is a palindrome when it reads the same backward as forward.

A substring is a contiguous sequence of characters within the string.

===============================================================================================================================================================================

## CODE( IN JAVA )

class Solution {
    public int countSubstrings(String s){
        int n=s.length();

        boolean[][] dp=new boolean[n][n];

        int count=0;

        for(int i=n-1;i>=0;i--){
            for(int j=i;j<n;j++){
                if((s.charAt(i)==s.charAt(j)) && (j-i<=2 || dp[i+1][j-1])){
                    dp[i][j]=true;
                    count++;
                }
            }
        }

        return count;
    }
}


===============================================================================================================================================================================

## CODE COMPLEXITY :- 

1.) TIME COMPLEXITY :- O(n^2)
2.) SPACE COMPLEXITY :- O(n)

===============================================================================================================================================================================
